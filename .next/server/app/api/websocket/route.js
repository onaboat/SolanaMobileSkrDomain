"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/websocket/route";
exports.ids = ["app/api/websocket/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:url");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwebsocket%2Froute&page=%2Fapi%2Fwebsocket%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwebsocket%2Froute.ts&appDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2Fdomain%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2Fdomain&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwebsocket%2Froute&page=%2Fapi%2Fwebsocket%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwebsocket%2Froute.ts&appDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2Fdomain%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2Fdomain&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_development_Documents_Code_domain_app_api_websocket_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/websocket/route.ts */ \"(rsc)/./app/api/websocket/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/websocket/route\",\n        pathname: \"/api/websocket\",\n        filename: \"route\",\n        bundlePath: \"app/api/websocket/route\"\n    },\n    resolvedPagePath: \"/Users/development/Documents/Code/domain/app/api/websocket/route.ts\",\n    nextConfigOutput,\n    userland: _Users_development_Documents_Code_domain_app_api_websocket_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/websocket/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ3ZWJzb2NrZXQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRndlYnNvY2tldCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRndlYnNvY2tldCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmRldmVsb3BtZW50JTJGRG9jdW1lbnRzJTJGQ29kZSUyRmRvbWFpbiUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZkZXZlbG9wbWVudCUyRkRvY3VtZW50cyUyRkNvZGUlMkZkb21haW4maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDbUI7QUFDaEc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za3ItZG9tYWluLXdhdGNoZXIvP2E4MjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2RldmVsb3BtZW50L0RvY3VtZW50cy9Db2RlL2RvbWFpbi9hcHAvYXBpL3dlYnNvY2tldC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvd2Vic29ja2V0L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvd2Vic29ja2V0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS93ZWJzb2NrZXQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvZGV2ZWxvcG1lbnQvRG9jdW1lbnRzL0NvZGUvZG9tYWluL2FwcC9hcGkvd2Vic29ja2V0L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3dlYnNvY2tldC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwebsocket%2Froute&page=%2Fapi%2Fwebsocket%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwebsocket%2Froute.ts&appDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2Fdomain%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2Fdomain&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/websocket/route.ts":
/*!************************************!*\
  !*** ./app/api/websocket/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var _lib_websocketWatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/websocketWatcher */ \"(rsc)/./app/lib/websocketWatcher.ts\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst DOMAINS_FILE = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\", \"domains.json\");\nlet watcher = null;\nlet connections = [];\n// Function to save domains to file\nasync function saveDomainsToFile(domains) {\n    try {\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.mkdir(path__WEBPACK_IMPORTED_MODULE_2___default().dirname(DOMAINS_FILE), {\n            recursive: true\n        });\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.writeFile(DOMAINS_FILE, JSON.stringify(domains, null, 2));\n    } catch (error) {\n        console.error(\"Error saving domains to file:\", error);\n    }\n}\n// Function to load existing domains\nasync function loadDomainsFromFile() {\n    try {\n        const data = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(DOMAINS_FILE, \"utf-8\");\n        return JSON.parse(data);\n    } catch (error) {\n        return [];\n    }\n}\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const action = searchParams.get(\"action\");\n    if (action === \"start\") {\n        const rpcUrl = process.env.HELIUS_RPC || \"https://api.mainnet-beta.solana.com\";\n        console.log(`🔗 Using RPC: ${rpcUrl === \"https://api.mainnet-beta.solana.com\" ? \"Default Solana RPC\" : \"Helius RPC\"}`);\n        if (!watcher) {\n            watcher = new _lib_websocketWatcher__WEBPACK_IMPORTED_MODULE_0__.WebSocketWatcher(rpcUrl, async (domain)=>{\n                try {\n                    // Load existing domains\n                    const existingDomains = await loadDomainsFromFile();\n                    // Check if domain already exists\n                    const domainExists = existingDomains.some((d)=>d.signature === domain.signature);\n                    if (!domainExists) {\n                        // Add new domain to the beginning of the array\n                        const updatedDomains = [\n                            domain,\n                            ...existingDomains\n                        ];\n                        // Save updated domains to file\n                        await saveDomainsToFile(updatedDomains);\n                        console.log(`✅ New domain saved: ${domain.name}`);\n                    }\n                    // Broadcast new domain to all connections\n                    connections.forEach((conn)=>{\n                        try {\n                            conn.write(`data: ${JSON.stringify({\n                                type: \"newDomain\",\n                                domain\n                            })}\\n\\n`);\n                        } catch (error) {\n                            console.error(\"Error sending to connection:\", error);\n                        }\n                    });\n                } catch (error) {\n                    console.error(\"Error processing new domain:\", error);\n                }\n            }, (stats)=>{\n                // Broadcast stats update to all connections\n                connections.forEach((conn)=>{\n                    try {\n                        conn.write(`data: ${JSON.stringify({\n                            type: \"stats\",\n                            stats\n                        })}\\n\\n`);\n                    } catch (error) {\n                        console.error(\"Error sending stats to connection:\", error);\n                    }\n                });\n            });\n        }\n        await watcher.start();\n        return new Response(JSON.stringify({\n            success: true,\n            message: \"Watcher started\"\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n    if (action === \"stop\") {\n        if (watcher) {\n            watcher.stop();\n            watcher = null;\n        }\n        return new Response(JSON.stringify({\n            success: true,\n            message: \"Watcher stopped\"\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n    if (action === \"status\") {\n        const stats = watcher ? watcher.getStats() : null;\n        return new Response(JSON.stringify({\n            isRunning: !!watcher,\n            stats: stats || {\n                totalProcessed: 0,\n                domainsFound: 0,\n                isConnected: false\n            }\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n    // SSE endpoint for real-time updates\n    const stream = new ReadableStream({\n        start (controller) {\n            const connection = {\n                write: (data)=>{\n                    controller.enqueue(new TextEncoder().encode(data));\n                }\n            };\n            connections.push(connection);\n            // Send initial stats\n            const stats = watcher ? watcher.getStats() : {\n                totalProcessed: 0,\n                domainsFound: 0,\n                isConnected: false\n            };\n            connection.write(`data: ${JSON.stringify({\n                type: \"stats\",\n                stats\n            })}\\n\\n`);\n            // Clean up on close\n            request.signal.addEventListener(\"abort\", ()=>{\n                connections = connections.filter((conn)=>conn !== connection);\n            });\n        }\n    });\n    return new Response(stream, {\n        headers: {\n            \"Content-Type\": \"text/event-stream\",\n            \"Cache-Control\": \"no-cache\",\n            \"Connection\": \"keep-alive\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Cache-Control\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/websocket/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/websocketWatcher.ts":
/*!*************************************!*\
  !*** ./app/lib/websocketWatcher.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketWatcher: () => (/* binding */ WebSocketWatcher)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(rsc)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n\nconst TLDH_PROGRAM_ID = \"TLDHkysf5pCnKsVA4gXpNvmy7psXLPEu4LAdDJthT9S\";\nclass WebSocketWatcher {\n    constructor(rpcUrl, onNewDomain, onStatsUpdate){\n        this.isRunning = false;\n        this.subscriptionId = null;\n        this.seenSignatures = new Set();\n        this.connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Connection(rpcUrl, {\n            commitment: \"confirmed\"\n        });\n        this.onNewDomain = onNewDomain;\n        this.onStatsUpdate = onStatsUpdate;\n        this.stats = {\n            totalProcessed: 0,\n            domainsFound: 0,\n            lastSignature: null,\n            isConnected: false,\n            startTime: new Date().toISOString()\n        };\n    }\n    async start() {\n        if (this.isRunning) return;\n        this.isRunning = true;\n        this.stats.isConnected = true;\n        this.stats.startTime = new Date().toISOString();\n        this.onStatsUpdate(this.stats);\n        console.log(\"\\uD83D\\uDD0C Starting WebSocket domain watcher...\");\n        // Subscribe to program logs\n        this.subscriptionId = await this.connection.onLogs(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(TLDH_PROGRAM_ID), (logInfo)=>{\n            this.handleLog(logInfo);\n        }, \"confirmed\");\n        console.log(\"✅ WebSocket subscription started (id =\", this.subscriptionId, \")\");\n    }\n    stop() {\n        this.isRunning = false;\n        this.stats.isConnected = false;\n        if (this.subscriptionId) {\n            this.connection.removeOnLogsListener(this.subscriptionId);\n            this.subscriptionId = null;\n        }\n        this.onStatsUpdate(this.stats);\n        console.log(\"\\uD83D\\uDED1 Stopping WebSocket domain watcher...\");\n    }\n    getStats() {\n        return {\n            ...this.stats\n        };\n    }\n    async handleLog(logInfo) {\n        try {\n            const { signature, logs } = logInfo;\n            // Dedupe by signature\n            if (this.seenSignatures.has(signature)) return;\n            this.seenSignatures.add(signature);\n            this.stats.totalProcessed++;\n            this.stats.lastSignature = signature;\n            const domain = this.extractDomainFromLogs(logs);\n            if (domain) {\n                this.stats.domainsFound++;\n                // Get transaction details to extract domain address\n                const tx = await this.connection.getTransaction(signature, {\n                    commitment: \"confirmed\",\n                    maxSupportedTransactionVersion: 0\n                });\n                const blockTime = tx?.blockTime || Math.floor(Date.now() / 1000);\n                const domainData = {\n                    name: domain,\n                    signature: signature,\n                    timestamp: new Date(blockTime * 1000).toISOString(),\n                    blockTime: blockTime,\n                    fee: tx?.meta?.fee,\n                    owner: this.extractDomainAddress(tx) || \"\"\n                };\n                this.onNewDomain(domainData);\n            }\n            this.onStatsUpdate(this.stats);\n        } catch (error) {\n            console.error(\"Error processing log:\", error);\n        }\n    }\n    async processSignature(sig) {\n        try {\n            this.stats.totalProcessed++;\n            const tx = await this.connection.getTransaction(sig.signature, {\n                commitment: \"confirmed\",\n                maxSupportedTransactionVersion: 0\n            });\n            const domain = this.extractDomainFromLogs(tx?.meta?.logMessages);\n            if (domain) {\n                this.stats.domainsFound++;\n                // Use the actual blockchain timestamp from the signature\n                const blockTime = sig.blockTime || tx?.blockTime || Math.floor(Date.now() / 1000);\n                const domainData = {\n                    name: domain,\n                    signature: sig.signature,\n                    timestamp: new Date(blockTime * 1000).toISOString(),\n                    blockTime: blockTime,\n                    fee: tx?.meta?.fee,\n                    owner: this.extractDomainAddress(tx) || \"\"\n                };\n                this.onNewDomain(domainData);\n            }\n        } catch (error) {\n            console.error(\"Error processing signature:\", error);\n        }\n    }\n    extractDomainFromLogs(logs) {\n        if (!logs?.length) return null;\n        const patterns = [\n            /Buying domain\\s+([a-z0-9._-]+\\.skr)/i,\n            /register(?:ing)?\\s+([a-z0-9._-]+\\.skr)/i,\n            /domain[:\\s]+([a-z0-9._-]+\\.skr)/i\n        ];\n        const joined = logs.join(\"\\n\");\n        for (const pattern of patterns){\n            const match = joined.match(pattern);\n            if (match?.[1]) return match[1].toLowerCase();\n        }\n        return null;\n    }\n    getAccountKeys(tx) {\n        if (!tx?.transaction?.message) return [];\n        try {\n            if (\"getAccountKeys\" in tx.transaction.message) {\n                // For versioned transactions\n                const keys = tx.transaction.message.getAccountKeys();\n                if (Array.isArray(keys)) {\n                    return keys.filter((key)=>key && typeof key.toBase58 === \"function\").map((key)=>key.toBase58());\n                } else if (keys && typeof keys.map === \"function\") {\n                    return keys.filter((key)=>key && typeof key.toBase58 === \"function\").map((key)=>key.toBase58());\n                } else {\n                    // If keys is not an array, try to convert it\n                    const keysArray = Array.from(keys || []);\n                    return keysArray.filter((key)=>key && typeof key.toBase58 === \"function\").map((key)=>key.toBase58());\n                }\n            } else if (\"accountKeys\" in tx.transaction.message) {\n                // For legacy transactions\n                const accountKeys = tx.transaction.message.accountKeys;\n                if (Array.isArray(accountKeys)) {\n                    return accountKeys.filter((key)=>key && typeof key.toBase58 === \"function\").map((key)=>key.toBase58());\n                }\n            }\n        } catch (error) {\n            console.error(\"Error getting account keys:\", error);\n        }\n        return [];\n    }\n    extractDomainAddress(tx) {\n        if (!tx?.transaction?.message) return null;\n        try {\n            // For versioned transactions, look at staticAccountKeys\n            if (\"staticAccountKeys\" in tx.transaction.message) {\n                const staticKeys = tx.transaction.message.staticAccountKeys;\n                if (Array.isArray(staticKeys) && staticKeys.length > 7) {\n                    // Based on the transaction structure, the owner is typically at index 7\n                    return staticKeys[7];\n                }\n            }\n            // For legacy transactions, try accountKeys\n            if (\"accountKeys\" in tx.transaction.message) {\n                const accountKeys = tx.transaction.message.accountKeys;\n                if (Array.isArray(accountKeys) && accountKeys.length > 7) {\n                    return accountKeys[7];\n                }\n            }\n        } catch (error) {\n            console.error(\"Error extracting owner address:\", error);\n        }\n        return null;\n    }\n    sleep(ms) {\n        return new Promise((resolve)=>setTimeout(resolve, ms));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/websocketWatcher.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@noble","vendor-chunks/uuid","vendor-chunks/rpc-websockets","vendor-chunks/whatwg-url","vendor-chunks/@solana","vendor-chunks/utf-8-validate","vendor-chunks/tr46","vendor-chunks/node-gyp-build","vendor-chunks/jayson","vendor-chunks/eventemitter3","vendor-chunks/bufferutil","vendor-chunks/superstruct","vendor-chunks/node-fetch","vendor-chunks/webidl-conversions","vendor-chunks/text-encoding-utf-8","vendor-chunks/safe-buffer","vendor-chunks/bs58","vendor-chunks/borsh","vendor-chunks/bn.js","vendor-chunks/base-x"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwebsocket%2Froute&page=%2Fapi%2Fwebsocket%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwebsocket%2Froute.ts&appDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2Fdomain%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2Fdomain&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();