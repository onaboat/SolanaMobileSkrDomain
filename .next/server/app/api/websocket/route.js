"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/websocket/route";
exports.ids = ["app/api/websocket/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:url");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwebsocket%2Froute&page=%2Fapi%2Fwebsocket%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwebsocket%2Froute.ts&appDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2FSolanaMobileSkrDomain%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2FSolanaMobileSkrDomain&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwebsocket%2Froute&page=%2Fapi%2Fwebsocket%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwebsocket%2Froute.ts&appDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2FSolanaMobileSkrDomain%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2FSolanaMobileSkrDomain&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_development_Documents_Code_SolanaMobileSkrDomain_app_api_websocket_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/websocket/route.ts */ \"(rsc)/./app/api/websocket/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/websocket/route\",\n        pathname: \"/api/websocket\",\n        filename: \"route\",\n        bundlePath: \"app/api/websocket/route\"\n    },\n    resolvedPagePath: \"/Users/development/Documents/Code/SolanaMobileSkrDomain/app/api/websocket/route.ts\",\n    nextConfigOutput,\n    userland: _Users_development_Documents_Code_SolanaMobileSkrDomain_app_api_websocket_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/websocket/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ3ZWJzb2NrZXQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRndlYnNvY2tldCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRndlYnNvY2tldCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmRldmVsb3BtZW50JTJGRG9jdW1lbnRzJTJGQ29kZSUyRlNvbGFuYU1vYmlsZVNrckRvbWFpbiUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZkZXZlbG9wbWVudCUyRkRvY3VtZW50cyUyRkNvZGUlMkZTb2xhbmFNb2JpbGVTa3JEb21haW4maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDa0M7QUFDL0c7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za3ItZG9tYWluLXdhdGNoZXIvPzFlOWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2RldmVsb3BtZW50L0RvY3VtZW50cy9Db2RlL1NvbGFuYU1vYmlsZVNrckRvbWFpbi9hcHAvYXBpL3dlYnNvY2tldC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvd2Vic29ja2V0L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvd2Vic29ja2V0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS93ZWJzb2NrZXQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvZGV2ZWxvcG1lbnQvRG9jdW1lbnRzL0NvZGUvU29sYW5hTW9iaWxlU2tyRG9tYWluL2FwcC9hcGkvd2Vic29ja2V0L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3dlYnNvY2tldC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwebsocket%2Froute&page=%2Fapi%2Fwebsocket%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwebsocket%2Froute.ts&appDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2FSolanaMobileSkrDomain%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2FSolanaMobileSkrDomain&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/websocket/route.ts":
/*!************************************!*\
  !*** ./app/api/websocket/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var _lib_websocketWatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/websocketWatcher */ \"(rsc)/./app/lib/websocketWatcher.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/prisma */ \"(rsc)/./app/lib/prisma.ts\");\n\n\nlet watcher = null;\nlet connections = [];\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const action = searchParams.get(\"action\");\n    if (action === \"start\") {\n        const rpcUrl = process.env.HELIUS_RPC || \"https://api.mainnet-beta.solana.com\";\n        console.log(`🔗 Using RPC: ${rpcUrl === \"https://api.mainnet-beta.solana.com\" ? \"Default Solana RPC\" : \"Helius RPC\"}`);\n        if (!watcher) {\n            watcher = new _lib_websocketWatcher__WEBPACK_IMPORTED_MODULE_0__.WebSocketWatcher(rpcUrl, async (domain)=>{\n                try {\n                    // Check if domain already exists in database\n                    const existingDomain = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.domain.findUnique({\n                        where: {\n                            signature: domain.signature\n                        }\n                    });\n                    if (!existingDomain) {\n                        // Add new domain to database\n                        const newDomain = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.domain.create({\n                            data: {\n                                signature: domain.signature,\n                                name: domain.name,\n                                timestamp: domain.timestamp,\n                                blockTime: domain.blockTime,\n                                owner: domain.owner,\n                                fee: domain.fee\n                            }\n                        });\n                        console.log(`✅ New domain saved to database: ${domain.name}`);\n                        console.log(` Broadcasting to ${connections.length} connections`);\n                        // Broadcast new domain to all connections\n                        connections.forEach((conn, index)=>{\n                            try {\n                                const message = JSON.stringify({\n                                    type: \"newDomain\",\n                                    domain: newDomain\n                                });\n                                conn.write(`data: ${message}\\n\\n`);\n                                console.log(` Sent to connection ${index}: ${domain.name}`);\n                            } catch (error) {\n                                console.error(`❌ Error sending to connection ${index}:`, error);\n                                // Remove failed connection\n                                connections.splice(index, 1);\n                            }\n                        });\n                    } else {\n                        console.log(`⚠️ Domain already exists in database: ${domain.name}`);\n                    }\n                } catch (error) {\n                    // Handle unique constraint error gracefully\n                    if (error.code === \"P2002\") {\n                        console.log(`⚠️ Domain already exists (constraint error): ${domain.name}`);\n                    } else {\n                        console.error(\"Error processing new domain:\", error);\n                    }\n                }\n            }, (stats)=>{\n                // Broadcast stats update to all connections\n                connections.forEach((conn, index)=>{\n                    try {\n                        conn.write(`data: ${JSON.stringify({\n                            type: \"stats\",\n                            stats\n                        })}\\n\\n`);\n                    } catch (error) {\n                        console.error(\"Error sending stats to connection:\", error);\n                        // Remove failed connection\n                        connections.splice(index, 1);\n                    }\n                });\n            });\n        }\n        await watcher.start();\n        return new Response(JSON.stringify({\n            success: true,\n            message: \"Watcher started\"\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n    if (action === \"stop\") {\n        if (watcher) {\n            watcher.stop();\n            watcher = null;\n        }\n        return new Response(JSON.stringify({\n            success: true,\n            message: \"Watcher stopped\"\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n    if (action === \"status\") {\n        const stats = watcher ? watcher.getStats() : null;\n        return new Response(JSON.stringify({\n            isRunning: !!watcher,\n            stats: stats || {\n                totalProcessed: 0,\n                domainsFound: 0,\n                isConnected: false\n            }\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n    // SSE endpoint for real-time updates\n    const stream = new ReadableStream({\n        start (controller) {\n            const connection = {\n                write: (data)=>{\n                    try {\n                        controller.enqueue(new TextEncoder().encode(data));\n                    } catch (error) {\n                        console.error(\"Error writing to controller:\", error);\n                    }\n                }\n            };\n            connections.push(connection);\n            console.log(` New SSE connection established. Total connections: ${connections.length}`);\n            // Send initial stats\n            const stats = watcher ? watcher.getStats() : {\n                totalProcessed: 0,\n                domainsFound: 0,\n                isConnected: false\n            };\n            connection.write(`data: ${JSON.stringify({\n                type: \"stats\",\n                stats\n            })}\\n\\n`);\n            // Clean up on close\n            request.signal.addEventListener(\"abort\", ()=>{\n                connections = connections.filter((conn)=>conn !== connection);\n                console.log(`🔌 SSE connection closed. Remaining connections: ${connections.length}`);\n            });\n        }\n    });\n    return new Response(stream, {\n        headers: {\n            \"Content-Type\": \"text/event-stream\",\n            \"Cache-Control\": \"no-cache\",\n            \"Connection\": \"keep-alive\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Cache-Control\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ZSxPQUFPO3dCQUNkeEIsUUFBUXdCLEtBQUssQ0FBQyxnQ0FBZ0NBO29CQUNoRDtnQkFDRjtZQUNGO1lBRUFwQyxZQUFZeUQsSUFBSSxDQUFDSjtZQUNqQnpDLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLG9EQUFvRCxFQUFFYixZQUFZMkIsTUFBTSxDQUFDLENBQUM7WUFFdkYscUJBQXFCO1lBQ3JCLE1BQU1ZLFFBQVF4QyxVQUFVQSxRQUFROEMsUUFBUSxLQUFLO2dCQUFFRSxnQkFBZ0I7Z0JBQUdDLGNBQWM7Z0JBQUdDLGFBQWE7WUFBTTtZQUN0R0ksV0FBV2xCLEtBQUssQ0FBQyxDQUFDLE1BQU0sRUFBRUgsS0FBS0MsU0FBUyxDQUFDO2dCQUFFQyxNQUFNO2dCQUFTSztZQUFNLEdBQUcsSUFBSSxDQUFDO1lBRXhFLG9CQUFvQjtZQUNwQnJDLFFBQVF3RCxNQUFNLENBQUNDLGdCQUFnQixDQUFDLFNBQVM7Z0JBQ3ZDM0QsY0FBY0EsWUFBWTRELE1BQU0sQ0FBQy9CLENBQUFBLE9BQVFBLFNBQVN3QjtnQkFDbER6QyxRQUFRQyxHQUFHLENBQUMsQ0FBQyxpREFBaUQsRUFBRWIsWUFBWTJCLE1BQU0sQ0FBQyxDQUFDO1lBQ3RGO1FBQ0Y7SUFDRjtJQUVBLE9BQU8sSUFBSWMsU0FBU1MsUUFBUTtRQUMxQlAsU0FBUztZQUNQLGdCQUFnQjtZQUNoQixpQkFBaUI7WUFDakIsY0FBYztZQUNkLCtCQUErQjtZQUMvQixnQ0FBZ0M7UUFDbEM7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tyLWRvbWFpbi13YXRjaGVyLy4vYXBwL2FwaS93ZWJzb2NrZXQvcm91dGUudHM/N2I4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJ1xuaW1wb3J0IHsgV2ViU29ja2V0V2F0Y2hlciB9IGZyb20gJy4uLy4uL2xpYi93ZWJzb2NrZXRXYXRjaGVyJ1xuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSAnLi4vLi4vbGliL3ByaXNtYSdcblxubGV0IHdhdGNoZXI6IFdlYlNvY2tldFdhdGNoZXIgfCBudWxsID0gbnVsbFxubGV0IGNvbm5lY3Rpb25zOiBhbnlbXSA9IFtdXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpXG4gIGNvbnN0IGFjdGlvbiA9IHNlYXJjaFBhcmFtcy5nZXQoJ2FjdGlvbicpXG5cbiAgaWYgKGFjdGlvbiA9PT0gJ3N0YXJ0Jykge1xuICAgIGNvbnN0IHJwY1VybCA9IHByb2Nlc3MuZW52LkhFTElVU19SUEMgfHwgJ2h0dHBzOi8vYXBpLm1haW5uZXQtYmV0YS5zb2xhbmEuY29tJ1xuICAgIGNvbnNvbGUubG9nKGDwn5SXIFVzaW5nIFJQQzogJHtycGNVcmwgPT09ICdodHRwczovL2FwaS5tYWlubmV0LWJldGEuc29sYW5hLmNvbScgPyAnRGVmYXVsdCBTb2xhbmEgUlBDJyA6ICdIZWxpdXMgUlBDJ31gKVxuXG4gICAgaWYgKCF3YXRjaGVyKSB7XG4gICAgICB3YXRjaGVyID0gbmV3IFdlYlNvY2tldFdhdGNoZXIoXG4gICAgICAgIHJwY1VybCxcbiAgICAgICAgYXN5bmMgKGRvbWFpbikgPT4ge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBDaGVjayBpZiBkb21haW4gYWxyZWFkeSBleGlzdHMgaW4gZGF0YWJhc2VcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nRG9tYWluID0gYXdhaXQgcHJpc21hLmRvbWFpbi5maW5kVW5pcXVlKHtcbiAgICAgICAgICAgICAgd2hlcmU6IHsgc2lnbmF0dXJlOiBkb21haW4uc2lnbmF0dXJlIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmICghZXhpc3RpbmdEb21haW4pIHtcbiAgICAgICAgICAgICAgLy8gQWRkIG5ldyBkb21haW4gdG8gZGF0YWJhc2VcbiAgICAgICAgICAgICAgY29uc3QgbmV3RG9tYWluID0gYXdhaXQgcHJpc21hLmRvbWFpbi5jcmVhdGUoe1xuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgIHNpZ25hdHVyZTogZG9tYWluLnNpZ25hdHVyZSxcbiAgICAgICAgICAgICAgICAgIG5hbWU6IGRvbWFpbi5uYW1lLFxuICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBkb21haW4udGltZXN0YW1wLFxuICAgICAgICAgICAgICAgICAgYmxvY2tUaW1lOiBkb21haW4uYmxvY2tUaW1lLFxuICAgICAgICAgICAgICAgICAgb3duZXI6IGRvbWFpbi5vd25lcixcbiAgICAgICAgICAgICAgICAgIGZlZTogZG9tYWluLmZlZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGDinIUgTmV3IGRvbWFpbiBzYXZlZCB0byBkYXRhYmFzZTogJHtkb21haW4ubmFtZX1gKVxuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgIEJyb2FkY2FzdGluZyB0byAke2Nvbm5lY3Rpb25zLmxlbmd0aH0gY29ubmVjdGlvbnNgKVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gQnJvYWRjYXN0IG5ldyBkb21haW4gdG8gYWxsIGNvbm5lY3Rpb25zXG4gICAgICAgICAgICAgIGNvbm5lY3Rpb25zLmZvckVhY2goKGNvbm4sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeSh7IHR5cGU6ICduZXdEb21haW4nLCBkb21haW46IG5ld0RvbWFpbiB9KVxuICAgICAgICAgICAgICAgICAgY29ubi53cml0ZShgZGF0YTogJHttZXNzYWdlfVxcblxcbmApXG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgIFNlbnQgdG8gY29ubmVjdGlvbiAke2luZGV4fTogJHtkb21haW4ubmFtZX1gKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGDinYwgRXJyb3Igc2VuZGluZyB0byBjb25uZWN0aW9uICR7aW5kZXh9OmAsIGVycm9yKVxuICAgICAgICAgICAgICAgICAgLy8gUmVtb3ZlIGZhaWxlZCBjb25uZWN0aW9uXG4gICAgICAgICAgICAgICAgICBjb25uZWN0aW9ucy5zcGxpY2UoaW5kZXgsIDEpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coYOKaoO+4jyBEb21haW4gYWxyZWFkeSBleGlzdHMgaW4gZGF0YWJhc2U6ICR7ZG9tYWluLm5hbWV9YClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgLy8gSGFuZGxlIHVuaXF1ZSBjb25zdHJhaW50IGVycm9yIGdyYWNlZnVsbHlcbiAgICAgICAgICAgIGlmIChlcnJvci5jb2RlID09PSAnUDIwMDInKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGDimqDvuI8gRG9tYWluIGFscmVhZHkgZXhpc3RzIChjb25zdHJhaW50IGVycm9yKTogJHtkb21haW4ubmFtZX1gKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcHJvY2Vzc2luZyBuZXcgZG9tYWluOicsIGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgKHN0YXRzKSA9PiB7XG4gICAgICAgICAgLy8gQnJvYWRjYXN0IHN0YXRzIHVwZGF0ZSB0byBhbGwgY29ubmVjdGlvbnNcbiAgICAgICAgICBjb25uZWN0aW9ucy5mb3JFYWNoKChjb25uLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgY29ubi53cml0ZShgZGF0YTogJHtKU09OLnN0cmluZ2lmeSh7IHR5cGU6ICdzdGF0cycsIHN0YXRzIH0pfVxcblxcbmApXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzZW5kaW5nIHN0YXRzIHRvIGNvbm5lY3Rpb246JywgZXJyb3IpXG4gICAgICAgICAgICAgIC8vIFJlbW92ZSBmYWlsZWQgY29ubmVjdGlvblxuICAgICAgICAgICAgICBjb25uZWN0aW9ucy5zcGxpY2UoaW5kZXgsIDEpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgKVxuICAgIH1cblxuICAgIGF3YWl0IHdhdGNoZXIuc3RhcnQoKVxuICAgIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBzdWNjZXNzOiB0cnVlLCBtZXNzYWdlOiAnV2F0Y2hlciBzdGFydGVkJyB9KSwge1xuICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH1cbiAgICB9KVxuICB9XG5cbiAgaWYgKGFjdGlvbiA9PT0gJ3N0b3AnKSB7XG4gICAgaWYgKHdhdGNoZXIpIHtcbiAgICAgIHdhdGNoZXIuc3RvcCgpXG4gICAgICB3YXRjaGVyID0gbnVsbFxuICAgIH1cbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgc3VjY2VzczogdHJ1ZSwgbWVzc2FnZTogJ1dhdGNoZXIgc3RvcHBlZCcgfSksIHtcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9XG4gICAgfSlcbiAgfVxuXG4gIGlmIChhY3Rpb24gPT09ICdzdGF0dXMnKSB7XG4gICAgY29uc3Qgc3RhdHMgPSB3YXRjaGVyID8gd2F0Y2hlci5nZXRTdGF0cygpIDogbnVsbFxuICAgIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBcbiAgICAgIGlzUnVubmluZzogISF3YXRjaGVyLFxuICAgICAgc3RhdHM6IHN0YXRzIHx8IHsgdG90YWxQcm9jZXNzZWQ6IDAsIGRvbWFpbnNGb3VuZDogMCwgaXNDb25uZWN0ZWQ6IGZhbHNlIH1cbiAgICB9KSwge1xuICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH1cbiAgICB9KVxuICB9XG5cbiAgLy8gU1NFIGVuZHBvaW50IGZvciByZWFsLXRpbWUgdXBkYXRlc1xuICBjb25zdCBzdHJlYW0gPSBuZXcgUmVhZGFibGVTdHJlYW0oe1xuICAgIHN0YXJ0KGNvbnRyb2xsZXIpIHtcbiAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSB7XG4gICAgICAgIHdyaXRlOiAoZGF0YTogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoZGF0YSkpXG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHdyaXRpbmcgdG8gY29udHJvbGxlcjonLCBlcnJvcilcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29ubmVjdGlvbnMucHVzaChjb25uZWN0aW9uKVxuICAgICAgY29uc29sZS5sb2coYCBOZXcgU1NFIGNvbm5lY3Rpb24gZXN0YWJsaXNoZWQuIFRvdGFsIGNvbm5lY3Rpb25zOiAke2Nvbm5lY3Rpb25zLmxlbmd0aH1gKVxuICAgICAgXG4gICAgICAvLyBTZW5kIGluaXRpYWwgc3RhdHNcbiAgICAgIGNvbnN0IHN0YXRzID0gd2F0Y2hlciA/IHdhdGNoZXIuZ2V0U3RhdHMoKSA6IHsgdG90YWxQcm9jZXNzZWQ6IDAsIGRvbWFpbnNGb3VuZDogMCwgaXNDb25uZWN0ZWQ6IGZhbHNlIH1cbiAgICAgIGNvbm5lY3Rpb24ud3JpdGUoYGRhdGE6ICR7SlNPTi5zdHJpbmdpZnkoeyB0eXBlOiAnc3RhdHMnLCBzdGF0cyB9KX1cXG5cXG5gKVxuXG4gICAgICAvLyBDbGVhbiB1cCBvbiBjbG9zZVxuICAgICAgcmVxdWVzdC5zaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCAoKSA9PiB7XG4gICAgICAgIGNvbm5lY3Rpb25zID0gY29ubmVjdGlvbnMuZmlsdGVyKGNvbm4gPT4gY29ubiAhPT0gY29ubmVjdGlvbilcbiAgICAgICAgY29uc29sZS5sb2coYPCflIwgU1NFIGNvbm5lY3Rpb24gY2xvc2VkLiBSZW1haW5pbmcgY29ubmVjdGlvbnM6ICR7Y29ubmVjdGlvbnMubGVuZ3RofWApXG4gICAgICB9KVxuICAgIH1cbiAgfSlcblxuICByZXR1cm4gbmV3IFJlc3BvbnNlKHN0cmVhbSwge1xuICAgIGhlYWRlcnM6IHtcbiAgICAgICdDb250ZW50LVR5cGUnOiAndGV4dC9ldmVudC1zdHJlYW0nLFxuICAgICAgJ0NhY2hlLUNvbnRyb2wnOiAnbm8tY2FjaGUnLFxuICAgICAgJ0Nvbm5lY3Rpb24nOiAna2VlcC1hbGl2ZScsXG4gICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLFxuICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnOiAnQ2FjaGUtQ29udHJvbCdcbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsiV2ViU29ja2V0V2F0Y2hlciIsInByaXNtYSIsIndhdGNoZXIiLCJjb25uZWN0aW9ucyIsIkdFVCIsInJlcXVlc3QiLCJzZWFyY2hQYXJhbXMiLCJVUkwiLCJ1cmwiLCJhY3Rpb24iLCJnZXQiLCJycGNVcmwiLCJwcm9jZXNzIiwiZW52IiwiSEVMSVVTX1JQQyIsImNvbnNvbGUiLCJsb2ciLCJkb21haW4iLCJleGlzdGluZ0RvbWFpbiIsImZpbmRVbmlxdWUiLCJ3aGVyZSIsInNpZ25hdHVyZSIsIm5ld0RvbWFpbiIsImNyZWF0ZSIsImRhdGEiLCJuYW1lIiwidGltZXN0YW1wIiwiYmxvY2tUaW1lIiwib3duZXIiLCJmZWUiLCJsZW5ndGgiLCJmb3JFYWNoIiwiY29ubiIsImluZGV4IiwibWVzc2FnZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0eXBlIiwid3JpdGUiLCJlcnJvciIsInNwbGljZSIsImNvZGUiLCJzdGF0cyIsInN0YXJ0IiwiUmVzcG9uc2UiLCJzdWNjZXNzIiwiaGVhZGVycyIsInN0b3AiLCJnZXRTdGF0cyIsImlzUnVubmluZyIsInRvdGFsUHJvY2Vzc2VkIiwiZG9tYWluc0ZvdW5kIiwiaXNDb25uZWN0ZWQiLCJzdHJlYW0iLCJSZWFkYWJsZVN0cmVhbSIsImNvbnRyb2xsZXIiLCJjb25uZWN0aW9uIiwiZW5xdWV1ZSIsIlRleHRFbmNvZGVyIiwiZW5jb2RlIiwicHVzaCIsInNpZ25hbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJmaWx0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/websocket/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/prisma.ts":
/*!***************************!*\
  !*** ./app/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFFN0MsTUFBTUMsa0JBQWtCQztBQUlqQixNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJSCx3REFBWUEsR0FBRTtBQUVsRSxJQUFJSSxJQUF5QixFQUFjSCxnQkFBZ0JFLE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za3ItZG9tYWluLXdhdGNoZXIvLi9hcHAvbGliL3ByaXNtYS50cz81MTliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KClcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWFcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/websocketWatcher.ts":
/*!*************************************!*\
  !*** ./app/lib/websocketWatcher.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketWatcher: () => (/* binding */ WebSocketWatcher)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(rsc)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n\nconst TLDH_PROGRAM_ID = \"TLDHkysf5pCnKsVA4gXpNvmy7psXLPEu4LAdDJthT9S\";\nclass WebSocketWatcher {\n    constructor(rpcUrl, onNewDomain, onStatsUpdate){\n        this.isRunning = false;\n        this.subscriptionId = null;\n        this.seenSignatures = new Set();\n        this.connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Connection(rpcUrl, {\n            commitment: \"confirmed\"\n        });\n        this.onNewDomain = onNewDomain;\n        this.onStatsUpdate = onStatsUpdate;\n        this.stats = {\n            totalProcessed: 0,\n            domainsFound: 0,\n            lastSignature: null,\n            isConnected: false,\n            startTime: new Date().toISOString()\n        };\n    }\n    async start() {\n        if (this.isRunning) return;\n        this.isRunning = true;\n        this.stats.isConnected = true;\n        this.stats.startTime = new Date().toISOString();\n        this.onStatsUpdate(this.stats);\n        console.log(\"\\uD83D\\uDD0C Starting WebSocket domain watcher...\");\n        // Subscribe to program logs\n        this.subscriptionId = await this.connection.onLogs(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(TLDH_PROGRAM_ID), (logInfo)=>{\n            this.handleLog(logInfo);\n        }, \"confirmed\");\n        console.log(\"✅ WebSocket subscription started (id =\", this.subscriptionId, \")\");\n    }\n    stop() {\n        this.isRunning = false;\n        this.stats.isConnected = false;\n        if (this.subscriptionId) {\n            this.connection.removeOnLogsListener(this.subscriptionId);\n            this.subscriptionId = null;\n        }\n        this.onStatsUpdate(this.stats);\n        console.log(\"\\uD83D\\uDED1 Stopping WebSocket domain watcher...\");\n    }\n    getStats() {\n        return {\n            ...this.stats\n        };\n    }\n    async handleLog(logInfo) {\n        try {\n            const { signature, logs } = logInfo;\n            // Dedupe by signature\n            if (this.seenSignatures.has(signature)) return;\n            this.seenSignatures.add(signature);\n            this.stats.totalProcessed++;\n            this.stats.lastSignature = signature;\n            const domain = this.extractDomainFromLogs(logs);\n            if (domain) {\n                this.stats.domainsFound++;\n                try {\n                    // Get transaction details to extract domain address\n                    const tx = await this.connection.getTransaction(signature, {\n                        commitment: \"confirmed\",\n                        maxSupportedTransactionVersion: 0\n                    });\n                    const blockTime = tx?.blockTime || Math.floor(Date.now() / 1000);\n                    const owner = this.extractDomainAddress(tx) || \"\";\n                    const domainData = {\n                        name: domain,\n                        signature: signature,\n                        timestamp: new Date(blockTime * 1000).toISOString(),\n                        blockTime: blockTime,\n                        fee: tx?.meta?.fee,\n                        owner: owner\n                    };\n                    this.onNewDomain(domainData);\n                } catch (error) {\n                    // If RPC fails, still create domain with basic info\n                    console.log(\"RPC failed for signature:\", signature, \"using fallback data\");\n                    const domainData = {\n                        name: domain,\n                        signature: signature,\n                        timestamp: new Date().toISOString(),\n                        blockTime: Math.floor(Date.now() / 1000),\n                        fee: 0,\n                        owner: \"\" // Empty owner if RPC fails\n                    };\n                    this.onNewDomain(domainData);\n                }\n            }\n            this.onStatsUpdate(this.stats);\n        } catch (error) {\n            console.error(\"Error processing log:\", error);\n        }\n    }\n    async processSignature(sig) {\n        try {\n            this.stats.totalProcessed++;\n            const tx = await this.connection.getTransaction(sig.signature, {\n                commitment: \"confirmed\",\n                maxSupportedTransactionVersion: 0\n            });\n            const domain = this.extractDomainFromLogs(tx?.meta?.logMessages);\n            if (domain) {\n                this.stats.domainsFound++;\n                // Use the actual blockchain timestamp from the signature\n                const blockTime = sig.blockTime || tx?.blockTime || Math.floor(Date.now() / 1000);\n                const domainData = {\n                    name: domain,\n                    signature: sig.signature,\n                    timestamp: new Date(blockTime * 1000).toISOString(),\n                    blockTime: blockTime,\n                    fee: tx?.meta?.fee,\n                    owner: this.extractDomainAddress(tx) || \"\"\n                };\n                this.onNewDomain(domainData);\n            }\n        } catch (error) {\n            console.error(\"Error processing signature:\", error);\n        }\n    }\n    extractDomainFromLogs(logs) {\n        if (!logs?.length) return null;\n        const patterns = [\n            /Buying domain\\s+([a-z0-9._-]+\\.skr)/i,\n            /register(?:ing)?\\s+([a-z0-9._-]+\\.skr)/i,\n            /domain[:\\s]+([a-z0-9._-]+\\.skr)/i\n        ];\n        const joined = logs.join(\"\\n\");\n        for (const pattern of patterns){\n            const match = joined.match(pattern);\n            if (match?.[1]) return match[1].toLowerCase();\n        }\n        return null;\n    }\n    getAccountKeys(tx) {\n        if (!tx?.transaction?.message) return [];\n        try {\n            if (\"getAccountKeys\" in tx.transaction.message) {\n                // For versioned transactions\n                const keys = tx.transaction.message.getAccountKeys();\n                if (Array.isArray(keys)) {\n                    return keys.filter((key)=>key && typeof key.toBase58 === \"function\").map((key)=>key.toBase58());\n                } else if (keys && typeof keys.map === \"function\") {\n                    return keys.filter((key)=>key && typeof key.toBase58 === \"function\").map((key)=>key.toBase58());\n                } else {\n                    // If keys is not an array, try to convert it\n                    const keysArray = Array.from(keys || []);\n                    return keysArray.filter((key)=>key && typeof key.toBase58 === \"function\").map((key)=>key.toBase58());\n                }\n            } else if (\"accountKeys\" in tx.transaction.message) {\n                // For legacy transactions\n                const accountKeys = tx.transaction.message.accountKeys;\n                if (Array.isArray(accountKeys)) {\n                    return accountKeys.filter((key)=>key && typeof key.toBase58 === \"function\").map((key)=>key.toBase58());\n                }\n            }\n        } catch (error) {\n            console.error(\"Error getting account keys:\", error);\n        }\n        return [];\n    }\n    extractDomainAddress(tx) {\n        if (!tx?.transaction?.message) return null;\n        try {\n            // For versioned transactions, look at staticAccountKeys\n            if (\"staticAccountKeys\" in tx.transaction.message) {\n                const staticKeys = tx.transaction.message.staticAccountKeys;\n                if (Array.isArray(staticKeys) && staticKeys.length > 2) {\n                    // Based on your Dune query, owner is at index 2\n                    return staticKeys[2];\n                }\n            }\n            // For legacy transactions, try accountKeys\n            if (\"accountKeys\" in tx.transaction.message) {\n                const accountKeys = tx.transaction.message.accountKeys;\n                if (Array.isArray(accountKeys) && accountKeys.length > 2) {\n                    return accountKeys[2];\n                }\n            }\n            // Try to find the owner from the account keys array\n            const accountKeys = this.getAccountKeys(tx);\n            if (accountKeys.length > 2) {\n                return accountKeys[2];\n            }\n            // If we can't find it at index 2, try to find it in the accounts\n            for(let i = 0; i < accountKeys.length; i++){\n                const key = accountKeys[i];\n                // Skip program IDs and known addresses\n                if (key !== TLDH_PROGRAM_ID && key !== \"11111111111111111111111111111111\") {\n                    return key;\n                }\n            }\n        } catch (error) {\n            console.error(\"Error extracting owner address:\", error);\n        }\n        return null;\n    }\n    sleep(ms) {\n        return new Promise((resolve)=>setTimeout(resolve, ms));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/websocketWatcher.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@noble","vendor-chunks/uuid","vendor-chunks/rpc-websockets","vendor-chunks/whatwg-url","vendor-chunks/@solana","vendor-chunks/utf-8-validate","vendor-chunks/tr46","vendor-chunks/node-gyp-build","vendor-chunks/jayson","vendor-chunks/eventemitter3","vendor-chunks/bufferutil","vendor-chunks/superstruct","vendor-chunks/node-fetch","vendor-chunks/webidl-conversions","vendor-chunks/text-encoding-utf-8","vendor-chunks/safe-buffer","vendor-chunks/bs58","vendor-chunks/borsh","vendor-chunks/bn.js","vendor-chunks/base-x"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwebsocket%2Froute&page=%2Fapi%2Fwebsocket%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwebsocket%2Froute.ts&appDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2FSolanaMobileSkrDomain%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdevelopment%2FDocuments%2FCode%2FSolanaMobileSkrDomain&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();